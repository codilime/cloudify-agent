tosca_definitions_version: cloudify_dsl_1_1

imports:
    - http://www.getcloudify.org/spec/cloudify/3.3m5/types.yaml
    - http://www.getcloudify.org/spec/openstack-plugin/1.3m5/plugin.yaml

plugins:

  mock:
    source: mock-plugin
    executor: host_agent

inputs:

  image:
    description: Image to be used when launching agent VM's

  flavor:
    description: Flavor of the agent VM's

  agent_user:
    description: The agent user

  home_dir:
    description: The home dir

  branch:
    description: branch

  manager_ip:
    description: management ip (used by the agent to connect to RabbitMQ)

node_types:

  nodes.Server:
    derived_from: cloudify.openstack.nodes.Server

  nodes.Application:
    derived_from: cloudify.nodes.Root
    interfaces:
      cloudify.interfaces.lifecycle:
        create: mock.mock_plugin.tasks.run

node_templates:

  host:
    type: nodes.Server
    properties:
      image: { get_input: image }
      flavor: { get_input: flavor }
      remote_execution: false
      server:
        userdata: { concat: [
          '#!/bin/bash -e', "\n",
          'sudo apt-get -y update', "\n",
          'sudo apt-get -y install python-dev', "\n",
          'wget https://bootstrap.pypa.io/get-pip.py', "\n",
          'sudo python get-pip.py', "\n",
          'sudo pip install virtualenv', "\n",
          'su ', { get_input: agent_user }, ' -c "virtualenv ', { get_input: home_dir }, '/cloudify_agent/env"', "\n",
          'su ', { get_input: agent_user }, ' -c "', { get_input: home_dir }, '/cloudify_agent/env/bin/pip install -r https://raw.githubusercontent.com/cloudify-cosmo/cloudify-agent/', { get_input: branch }, '/dev-requirements.txt"', "\n",
          'su ', { get_input: agent_user }, ' -c "', { get_input: home_dir }, '/cloudify_agent/env/bin/pip install https://github.com/cloudify-cosmo/cloudify-agent/archive/', { get_input: branch }, '.zip"', "\n",
          'su ', { get_input: agent_user }, ' -c "', { get_input: home_dir }, '/cloudify_agent/env/bin/cfy-agent daemons create    --name=cloudify_agent_userdata --queue=cloudify_agent_userdata_queue --process-management=init.d --manager-ip=', { get_input: manager_ip } ,' --user=', { get_input: agent_user }, ' --workdir=', { get_input: home_dir }, '/cloudify_agent/work"', "\n",
          'su ', { get_input: agent_user }, ' -c "', { get_input: home_dir }, '/cloudify_agent/env/bin/cfy-agent daemons configure --name=cloudify_agent_userdata"', "\n",
          'su ', { get_input: agent_user }, ' -c "', { get_input: home_dir }, '/cloudify_agent/env/bin/cfy-agent daemons start     --name=cloudify_agent_userdata"', "\n"
        ] }

      cloudify_agent:
        name: cloudify_agent_userdata
        queue: cloudify_agent_userdata_queue

  application:
    type: nodes.Application
    relationships:
      - type: cloudify.relationships.contained_in
        target: host

outputs:
  test:
    value: { get_attribute: [application, test] }
